MODULE PurchaseShipmentTerminalHandler;

REQUIRE PurchaseShipment, TerminalHandler;

NAMESPACE Purchase;

useAutoPurchaseInvoiceTerminal 'Создавать накладные при импорте документов ТСД' = DATA BOOLEAN (Stock);
purchaseInvoiceTerminalDocumentType =  DATA TerminalDocumentType();
namePurchaseInvoiceTerminalDocumentType 'Тип документа ТСД для импорта накладных (закупка)' () =  name(purchaseInvoiceTerminalDocumentType());

EXTEND FORM options
    PROPERTIES useAutoPurchaseInvoiceTerminal(s)
    PROPERTIES namePurchaseInvoiceTerminalDocumentType();
    
DESIGN options {
    terminalServer{
        MOVE PROPERTY (namePurchaseInvoiceTerminalDocumentType());
    }
}

nearestOrderDetail = GROUP MAX OrderDetail d 
    IF shipmentDate(d) <= DATE dt AND isPosted(d) AND NOT isClosed(d) AND toInvoice(d)
    BY sku(d), supplierStock(d), customerStock(d), dt;
    
supplierStock(TerminalDocument d) = IF skipPrefix(terminalHandbookType1(purchaseInvoiceTerminalDocumentType())) THEN stock(idTerminalHandbookType1(d))
    ELSE stock(replace(idTerminalHandbookType1(d),idTerminalHandbookType1(purchaseInvoiceTerminalDocumentType()),''));

overAutoPurchaseInvoiceTerminal  ABSTRACT LIST ( UserInvoice);

process(TerminalDocument document) + {        

    
    IF terminalDocumentType(document)== purchaseInvoiceTerminalDocumentType() AND useAutoPurchaseInvoiceTerminal(stock(document)) THEN {
    
        FOR NOT userInvoice(id(document)) NEW d = UserInvoice DO {
            id(d) <- STRING[100](id(document));
        }
        
        //приходы
        FOR UserInvoice i == userInvoice(id(document)) DO {
            customer(i) <- legalEntity(stock(document));
            customerStock(i) <- stock(document);
            supplier(i) <- legalEntity(supplierStock(document));
            supplierStock(i) <- supplierStock(document);
            operation(i) <- defaultPurchaseOperation();
            number(i) <- STRING[48](title(document));
            
            date(i) <- currentDate();
            time(i) <- currentTime();
            createdUser(i) <- createdUser(document);
            
            priceListType(i) <- defaultPriceListType(operation(i));
        }
        
        FOR terminalDocument(TerminalDocumentDetail tdd) == document AND NOT userInvoiceDetail(id(tdd)) ORDER number(tdd) NEW d = UserInvoiceDetail DO {
            id(d) <- id(tdd);
        }
        
        FOR terminalDocument(TerminalDocumentDetail tdd) == document AND UserInvoiceDetail d == userInvoiceDetail(id(tdd)) DO {
            userInvoice(d) <- userInvoice(id(document));
            sku(d) <- sku(tdd);
            quantity(d) <- quantity(tdd);
            orderDetail(d) <- nearestOrderDetail(sku(tdd), supplierStock(document), stock(document), currentDate() );
            manufactureDate(d) <- extraDate1(tdd);
        }
      
        executeLocalEvents('Purchase.userInvoice');
        
        overAutoPurchaseInvoiceTerminal(userInvoice(id(document)));
        
        used(document) <- TRUE;
    }
}
